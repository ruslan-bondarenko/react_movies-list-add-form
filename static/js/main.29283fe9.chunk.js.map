{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","onAddMovie","event","preventDefault","props","addMovie","setState","addValue","key","value","onSubmit","this","Object","entries","type","name","onChange","target","required","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"uyEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,eCOfC,G,MAAb,4MACEC,MAAQ,CACNd,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IANZ,EASEG,WAAa,SAACC,GACZA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKL,OACzB,EAAKM,SAAS,CACZpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,MAjBd,EAqBES,SAAW,SAACC,EAAaC,GACvB,EAAKH,SAAL,eACGE,EAAMC,KAvBb,4CA2BE,WAAU,IAAD,OACP,OACE,sBAAMC,SAAUC,KAAKV,WAArB,SACE,sBAAKX,UAAU,OAAf,UACGsB,OAAOC,QAAQF,KAAKX,OAAOJ,KAAI,mCAAEY,EAAF,KAAOC,EAAP,YAC9B,qCACE,oBAAGnB,UAAU,cAAb,UACGkB,EACA,QAEO,gBAARA,EAEE,uBACElB,UAAU,YACVwB,KAAK,OACLC,KAAMP,EAENC,MAAOA,EACPO,SAAU,SAAAd,GAGkB,WAAtBA,EAAMe,OAAOF,MACdb,EAAMe,OAAOF,KAKd,EAAKR,SAASC,EAAKN,EAAMe,OAAOR,QAKpCS,UAAQ,GAhBHV,GAoBP,0BACElB,UAAU,aAEVmB,MAAOA,EACPO,SAAU,SAAAd,GAAK,OAAI,EAAKK,SAASC,EAAKN,EAAMe,OAAOR,QACnDS,UAAQ,GAHHV,SASf,wBACEM,KAAK,SACLxB,UAAU,eAFZ,0BA1EV,GAA8B6B,c,QCTjBC,EAAb,4MACEpB,MAAe,CACbL,OAAQ0B,GAFZ,EAKEhB,SAAW,SAACR,GACV,EAAKS,UAAS,SAAAN,GAAK,MAAK,CACtBL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAWgB,KAAKX,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUe,SAAUM,KAAKN,oBApBnC,GAAyBiB,IAAMH,WCN/BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.29283fe9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable max-len */\nimport { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\n// const rightLink = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n// console.log(rightLink);\n\nexport class NewMovie extends Component<Props, State> {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  onAddMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.props.addMovie(this.state);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  addValue = (key: string, value: string) => {\n    this.setState({\n      [key]: value,\n    } as Pick<Movie, keyof Movie>);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onAddMovie}>\n        <div className=\"form\">\n          {Object.entries(this.state).map(([key, value]) => (\n            <>\n              <p className=\"form__title\">\n                {key}\n                {': '}\n              </p>\n              {(key !== 'description')\n                ? (\n                  <input\n                    className=\"form__put\"\n                    type=\"text\"\n                    name={key}\n                    key={key}\n                    value={value}\n                    onChange={event => {\n                      // console.log(event.target);\n                      // Try to do Advanced level of task\n                      if (event.target.name === 'imgUrl'\n                      || event.target.name === 'imdbUrl') {\n                        // console.log('imgUrl or imdbUrl');\n                        // if (!event.target.value.match(rightLink)) {\n                        //   // console.log('Alert!');\n                        // }\n                        this.addValue(key, event.target.value);\n                      } else {\n                        this.addValue(key, event.target.value);\n                      }\n                    }}\n                    required\n                  />\n                )\n                : (\n                  <textarea\n                    className=\"form__area\"\n                    key={key}\n                    value={value}\n                    onChange={event => this.addValue(key, event.target.value)}\n                    required\n                  />\n                )}\n            </>\n          ))}\n\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}